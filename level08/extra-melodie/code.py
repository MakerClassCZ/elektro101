"""
LEVEL 8 - P≈ôehr√°v√°n√≠ melodi√≠ rotaƒçn√≠m enkod√©rem (SIMPLEIO VERZE)

ZAPOJEN√ç OBVODU:
ROZ≈†I≈òUJEME zapojen√≠ z Level 6 a nahrazujeme servo bzuƒç√°kem:
- PONECH√ÅV√ÅME: Rotaƒçn√≠ enkod√©r p≈ôipojte:
  - GND k zemi (GND)
  - + k ADC_VREF nebo 3V3_EN
  - DT k digit√°ln√≠mu vstupu GP04 (A pin) 
  - CLK k digit√°ln√≠mu vstupu GP03 (B pin)
  - SW p≈ôipojte k GP02 (tlaƒç√≠tko play)

- P≈òID√ÅV√ÅME: Pasivn√≠ bzuƒç√°k p≈ôipojte:
  - Kladn√Ω pin k GP06 (PWM v√Ωstup)
  - Z√°porn√Ω pin k zemi (GND)

- P≈òID√ÅV√ÅME: LED indik√°tor p≈ôipojte:
  - Anoda (+) k GP00
  - Katoda (-) p≈ôes odpor 330Œ© k zemi (GND)

Toto je vylep≈°en√° verze pou≈æ√≠vaj√≠c√≠ modul simpleio pro p≈ôehr√°v√°n√≠
melodi√≠ a jednotliv√Ωch t√≥n≈Ø s p≈ôesn√Ωm ƒçasov√°n√≠m.

VYLEP≈†EN√ç:
- Pou≈æit√≠ simpleio.tone() pro p≈ôehr√°v√°n√≠ t√≥n≈Ø
- P≈ôedefinovan√© melodie
- Enkod√©r pro v√Ωbƒõr melodie
- Tlaƒç√≠tko pro spu≈°tƒõn√≠ vybran√© melodie
- LED indik√°tor p≈ôi p≈ôehr√°v√°n√≠ melodie
- Jednodu≈°≈°√≠ API ne≈æ manu√°ln√≠ PWM
"""

# import knihoven pro pr√°ci s hardware
import board        # p≈ô√≠stup k pin≈Øm a hardware za≈ô√≠zen√≠
import rotaryio     # vestavƒõn√Ω modul pro rotaƒçn√≠ enkod√©ry
import digitalio    # pr√°ce s digit√°ln√≠mi vstupy (tlaƒç√≠tko)
import simpleio     # modul pro jednoduch√© t√≥ny a melodie
import time         # funkce pro ƒçek√°n√≠ a pr√°ci s ƒçasem

# vytvo≈ôen√≠ objektu pro enkod√©r
encoder = rotaryio.IncrementalEncoder(board.GP4, board.GP3)

# vytvo≈ôen√≠ objektu pro tlaƒç√≠tko
button = digitalio.DigitalInOut(board.GP2)
button.direction = digitalio.Direction.INPUT
button.pull = digitalio.Pull.UP

# vytvo≈ôen√≠ objektu pro LED indik√°tor
led = digitalio.DigitalInOut(board.GP0)
led.direction = digitalio.Direction.OUTPUT

# promƒõnn√© pro sledov√°n√≠ enkod√©ru a tlaƒç√≠tka
posledni_pozice = 0
aktualni_melodie = 0
posledni_stav_tlacitka = True

# hudebn√≠ noty (frekvence v Hz, zaokrouhlen√© na integery)
C4 = 262
D4 = 294
E4 = 330
F4 = 349
G4 = 392
A4 = 440
B4 = 494
C5 = 523
D5 = 587
E5 = 659
F5 = 698
G5 = 784

# d√©lka t√≥n≈Ø (vizu√°ln√≠ reprezentace)
O = 0.2      # kr√°tk√° nota
OO = 0.4     # st≈ôedn√≠ nota  
OOO = 0.6    # dlouh√° nota
X = 0    # pauza (≈æ√°dn√Ω t√≥n)

# definice melodi√≠ (nota, d√©lka)
melodie = [
    {
        "nazev": "Tvinkle Twinkle",
        "tony": [
            (C4, OO), (C4, OO), (G4, OO), (G4, OO),
            (A4, OO), (A4, OO), (G4, OOO), (X, O),
            (F4, OO), (F4, OO), (E4, OO), (E4, OO),
            (D4, OO), (D4, OO), (C4, OOO)
        ]
    },
    {
        "nazev": "Mary Had a Little Lamb",
        "tony": [
            (E4, OO), (D4, OO), (C4, OO), (D4, OO),
            (E4, OO), (E4, OO), (E4, OOO), (X, O),
            (D4, OO), (D4, OO), (D4, OOO), (X, O),
            (E4, OO), (G4, OO), (G4, OOO)
        ]
    },
    {
        "nazev": "Happy Birthday",
        "tony": [
            (C4, O), (C4, O), (D4, OO), (C4, OO),
            (F4, OO), (E4, OOO), (X, O),
            (C4, O), (C4, O), (D4, OO), (C4, OO),
            (G4, OO), (F4, OOO)
        ]
    },
    {
        "nazev": "≈†k√°ly C dur",
        "tony": [
            (C4, O), (D4, O), (E4, O), (F4, O),
            (G4, O), (A4, O), (B4, O), (C5, OO), (X, O),
            (C5, O), (B4, O), (A4, O), (G4, O),
            (F4, O), (E4, O), (D4, O), (C4, OO)
        ]
    },
    {
        "nazev": "Indiana Jones (Raiders March)",
        "tony": [
            (E4, O), (F4, O), (G4, OO), (C5, OOO), (X, O),
            (D4, O), (E4, O), (F4, OOO), (X, O),
            (G4, O), (A4, O), (B4, OO), (F5, OOO), (X, O),
            (A4, O), (B4, O), (C5, OO), (D5, OO), (E5, OO)
        ]
    }
]

def prehraj_melodii(melodie_data):
    """P≈ôehraje melodii pomoc√≠ simpleio.tone() s LED indik√°torem"""
    print(f"P≈ôehr√°v√°m: {melodie_data['nazev']}")
    
    for nota, delka in melodie_data["tony"]:
        if nota == X:
            # pauza - LED zhasne, pouze ƒçek√°n√≠ bez zvuku
            led.value = False
            time.sleep(delka)
        else:
            # p≈ôehr√°n√≠ t√≥nu s LED
            led.value = True  # rozsv√≠cen√≠ LED
            simpleio.tone(board.GP6, nota, delka)
            led.value = False  # zhasnut√≠ LED
        
        # kr√°tk√° pauza mezi t√≥ny (kromƒõ explicitn√≠ch pauz)
        if nota != X:
            time.sleep(0.05)
    
    # ujistit se, ≈æe LED je zhasnuta na konci
    led.value = False
    print("Melodie dokonƒçena")

print("üéµ MUSIC PLAYER üéµ")
print("Ot√°ƒçejte enkod√©rem pro v√Ωbƒõr melodie")
print("Stisknƒõte tlaƒç√≠tko pro p≈ôehr√°n√≠")
print(f"Dostupn√© melodie: {len(melodie)}")

# v√Ωpis dostupn√Ωch melodi√≠
for i, mel in enumerate(melodie):
    print(f"  {i+1}. {mel['nazev']}")

print(f"\n>>> Vybr√°na: {melodie[aktualni_melodie]['nazev']} <<<")
print("Stisknƒõte tlaƒç√≠tko pro p≈ôehr√°n√≠")

# hlavn√≠ smyƒçka
while True:
    # ƒçten√≠ pozice enkod√©ru
    aktualni_pozice = encoder.position
    
    # kontrola zmƒõny pozice enkod√©ru
    if aktualni_pozice != posledni_pozice:
        # v√Ωpoƒçet rozd√≠lu
        rozdil = aktualni_pozice - posledni_pozice
        
        # zmƒõna melodie podle smƒõru ot√°ƒçen√≠
        if rozdil > 0:
            # ot√°ƒçen√≠ vpravo - dal≈°√≠ melodie
            aktualni_melodie = (aktualni_melodie + 1) % len(melodie)
        elif rozdil < 0:
            # ot√°ƒçen√≠ vlevo - p≈ôedchoz√≠ melodie
            aktualni_melodie = (aktualni_melodie - 1) % len(melodie)
        
        # v√Ωpis vybran√© melodie
        print(f"\n>>> Vybr√°na: {melodie[aktualni_melodie]['nazev']} <<<")
        print("Stisknƒõte tlaƒç√≠tko pro p≈ôehr√°n√≠")
        
        # ulo≈æen√≠ pozice
        posledni_pozice = aktualni_pozice
    
    # kontrola tlaƒç√≠tka
    aktualni_stav_tlacitka = button.value
    
    # detekce stisku tlaƒç√≠tka (zmƒõna z True na False)
    if posledni_stav_tlacitka == True and aktualni_stav_tlacitka == False:
        print(f"\nüé∂ P≈òEHR√ÅV√ÅM: {melodie[aktualni_melodie]['nazev']} üé∂")
        prehraj_melodii(melodie[aktualni_melodie])
        print("Melodie dokonƒçena. Vyberte dal≈°√≠ a stisknƒõte tlaƒç√≠tko.")
        
        # kr√°tk√° pauza proti "poskakov√°n√≠" tlaƒç√≠tka
        time.sleep(0.2)
    
    # ulo≈æen√≠ stavu tlaƒç√≠tka
    posledni_stav_tlacitka = aktualni_stav_tlacitka
    
    # kr√°tk√° pauza
    time.sleep(0.01)

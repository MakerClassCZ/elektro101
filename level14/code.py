"""
LEVEL 14 - NeoPixel Matrix 4x4 - Z√°kladn√≠ postupn√© rozsvƒõcov√°n√≠

ZAPOJEN√ç OBVODU:
NeoPixel matrix 4x4 p≈ôipojte:
- VCC k 3V3 nebo 5V (podle specifikace matice)
- GND k zemi (GND)
- DIN (Data Input) k GP18

POZN√ÅMKA: NeoPixel matrix m≈Ø≈æe pot≈ôebovat extern√≠ nap√°jen√≠ p≈ôi pln√©m jasu.
Pro testov√°n√≠ a ni≈æ≈°√≠ jas by mƒõlo staƒçit nap√°jen√≠ z Pico.

JAK FUNGUJE NEOPIXEL:
NeoPixel (WS2812) jsou adresovateln√© RGB LED diody uspo≈ô√°dan√© v matici.
Ka≈æd√° LED m√° sv≈Øj index (0-15) a m≈Ø≈æeme ji ovl√°dat nez√°visle.
Matrix 4x4 = 16 LED diod, kter√© rozsvƒõcujeme postupnƒõ jedna po druh√©.

V tomto p≈ô√≠kladu postupnƒõ rozsv√≠t√≠me v≈°echny LED:
1. Nejprve ƒçervenƒõ (LED 0-15)
2. Pak zelenƒõ (LED 0-15)  
3. Pak mod≈ôe (LED 0-15)
4. A opakujeme od zaƒç√°tku

NOV√â KONCEPTY:
- Adresovateln√© RGB LED (NeoPixel/WS2812)
- Postupn√© ovl√°d√°n√≠ jednotliv√Ωch LED
- RGB barvy (255, 0, 0) = ƒçerven√°
- Cyklick√© opakov√°n√≠ sekvence
"""

# import knihoven pro pr√°ci s hardware
import board        # p≈ô√≠stup k pin≈Øm a hardware za≈ô√≠zen√≠
import neopixel     # knihovna pro NeoPixel LED
import time         # funkce pro ƒçek√°n√≠ a pr√°ci s ƒçasem

# konfigurace NeoPixel matrix 4x4
NEOPIXEL_PIN = board.GP18     # pin pro data sign√°l
NUM_PIXELS = 16               # poƒçet LED v matici (4x4 = 16)
BRIGHTNESS = 0.3              # jas (0.0 - 1.0, pozor na spot≈ôebu!)

# vytvo≈ôen√≠ NeoPixel objektu
pixels = neopixel.NeoPixel(NEOPIXEL_PIN, NUM_PIXELS, brightness=BRIGHTNESS, auto_write=False)

# definice barev (R, G, B) - hodnoty 0-255
RED = (255, 0, 0)      # ƒçerven√°
GREEN = (0, 255, 0)    # zelen√°
BLUE = (0, 0, 255)     # modr√°
BLACK = (0, 0, 0)      # ƒçern√° (vypnuto)

# seznam barev pro cyklov√°n√≠
COLORS = [RED, GREEN, BLUE]
COLOR_NAMES = ["ƒåerven√°", "Zelen√°", "Modr√°"]

def clear_all():
    """Vypne v≈°echny LED"""
    pixels.fill(BLACK)
    pixels.show()

def light_pixel(index, color):
    """Rozsv√≠t√≠ jednu LED na dan√©m indexu"""
    pixels[index] = color
    pixels.show()

print("üåà NEOPIXEL MATRIX 4x4 - Postupn√© rozsvƒõcov√°n√≠")
print("LED se rozsvƒõcuj√≠ postupnƒõ jedna po druh√©")
print("Po≈ôad√≠ barev: ƒåerven√° ‚Üí Zelen√° ‚Üí Modr√° ‚Üí opakov√°n√≠")


# hlavn√≠ smyƒçka
while True:
    # Projdi v≈°echny barvy
    for color_index, color in enumerate(COLORS):
        color_name = COLOR_NAMES[color_index]
        print(f"üé® {color_name} - rozsvƒõcuji LED 0-15...")
        
        # Nejprve vypni v≈°echny LED
        clear_all()
        
        # Postupnƒõ rozsvƒõcuj v≈°echny LED aktu√°ln√≠ barvou
        for pixel_index in range(NUM_PIXELS):
            light_pixel(pixel_index, color)
            print(f"  LED {pixel_index:2d}: ‚ñ†")
            time.sleep(0.2)  # pauza mezi LED (200ms)
        
        # Kr√°tk√° pauza na konci barvy
        print(f"  ‚úÖ V≈°ech 16 LED {color_name.lower()}")
        time.sleep(1)
    
    print("üîÑ Opakuji od zaƒç√°tku...\n")
